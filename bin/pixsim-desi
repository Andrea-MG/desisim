#!/usr/bin/env python

"""
Simulate DESI spectrograph CCD images given input spectra and PSF

First step: organize inputs

Stephen Bailey, LBL
January 2014
"""

import sys
import os
import numpy as np
import optparse
import multiprocessing as MP
import random

import fitsio
import yaml

from astropy.io import fits
from astropy.table import Table

import specter
from specter.psf import load_psf
from specter.throughput import load_throughput
import specter.util

from desisim.obs import get_next_obs
from desisim import pixsim

#- Parse options
parser = optparse.OptionParser(
    usage = "%prog [options]",
    epilog = "See $SPECTER_DIR/doc/datamodel.md for input format details"
    )
    
parser.add_option("--randseed", type="int", default=0, help="random number seed")
### parser.add_option("--debug", action="store_true", help="start ipython after running")
parser.add_option("--verbose", action="store_true", help="print more stuff")
parser.add_option("--newexp", action="store_true", help="Create new exposure")

opts, args = parser.parse_args()

#- Check environment
envOK = True
for envvar in ('DESIMODEL', 'DESI_SPECTRO_SIM'):
    if envvar not in os.environ:
        print "ERROR: %s is required" % envvar
        envOK = False
if not envOK:
    print "Set those environment variable(s) and then try again"
    sys.exit(1)

#- Initialize random seeds
random.seed(opts.randseed)
np.random.seed(opts.randseed)

if opts.newexp:
    night, expid = pixsim.new_exposure(verbose=opts.verbose)

#- Actually do the pixel simulation
for simfile in args:
    pixsim.simulate(simfile)

#-------------------------------------------------------------------------
# if opts.debug:
#     #--- DEBUG ---
#     from pylab import *
#     ion()
#     import IPython
#     IPython.embed()
#     #--- DEBUG ---
    
